{"version":3,"sources":["components/D3NetworkGraph.tsx","components/Dialogs/LandingDialog.tsx","components/Dialogs/LoginDialog.tsx","components/Dialogs/SignupDialog.tsx","components/Dialogs/AddNodeDialog.tsx","components/Dialogs/DashboardDialog.tsx","api/common.tsx","api/user.tsx","api/node.tsx","containers/DialogBox/DialogBox.tsx","containers/DialogBox/index.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["NetworkGraph","width","height","graph","root","linkDistance","forceStrength","nodeRadius","linkWidth","setSelectedNode","svgRef","useRef","useEffect","_nodes","id","data","name","_links","queue","visited","Set","length","pId","shift","console","log","undefined","has","children","add","i","c","push","source","target","parseGraph","nodes","links","svg","d3","current","selectedNodeId","getNodeColor","node","colors","primary","secondary","dark","getLinkColor","link","sim","simulation","force","strength","distance","d","append","attr","selectAll","join","nodeGroup","call","on","event","active","alphaTarget","restart","subject","fx","x","fy","y","this","label","text","stop","remove","viewBox","ref","defaultProps","LandingDialog","onLogin","onSignup","onNoAccount","className","type","onClick","SignupDialog","onSubmit","onBack","useField","email","setEmail","password","setPassword","useState","showPassword","setShowPassword","e","preventDefault","htmlFor","value","onChange","required","initial","state","setState","firstName","setFirstName","lastName","setLastName","username","setUsername","AddNodeDialog","setName","knowUsername","setKnowUsername","placeholder","checked","DashboardDialog","bubbleSize","onAddNode","checkStatus","res","a","status","json","then","body","Error","message","_","errors","CORS_HEADER","window","location","origin","API_ADDR","process","signup","form","fetch","method","headers","mode","credentials","JSON","stringify","login","addNode","Dialog","DialogBox","selectedNode","DialogToRender","setBubble","setUser","Landing","dialog","setDialog","error","setError","userAPI","user","switchDialog","Dashboard","bubble","nodeAPI","dlg","Login","Signup","AddNode","dialogText","subtitles","App","n","Math","floor","random","j","includes","getFakeNetwork","Object","keys","outerWidth","outerHeight","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0e26a1e0.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport colors from 'data/colors.json';\nimport * as d3 from 'd3';\nimport './D3NetworkGraph.scss';\n\ninterface Link {\n  source: string;\n  target: string;\n}\n\ninterface Node {\n  id: string;\n  data: object;\n}\n\nexport default function NetworkGraph({\n  width, height, graph, root,\n  linkDistance, forceStrength, nodeRadius, linkWidth,\n  setSelectedNode\n}) {\n  // const [ selectedNode, setSelectedNode ] = useState(null);\n  const svgRef = useRef(null);\n\n  useEffect(() => {\n    const [ nodes, links ] = parseGraph(graph, root);\n    const svg = d3.select(svgRef.current);\n    let selectedNodeId = null;\n\n    console.log('nodes:', nodes);\n    console.log('links:', links);\n\n    function getNodeColor(node) : string {\n      switch(node.id) {\n        case root.id:\n          return colors.primary;\n        case selectedNodeId:\n          return colors.secondary;\n        default:\n          return colors.dark;\n      }\n    }\n\n    function getLinkColor(link) : string {\n      if (link.source.id === selectedNodeId || link.target.id === selectedNodeId)\n        return colors.secondary;\n      else\n        return colors.dark;\n    }\n  \n\n    const simulation = d3.forceSimulation(nodes)\n      .force('charge',\n          d3.forceManyBody().strength(forceStrength))\n      .force(\"link\",\n          d3.forceLink(links).distance(linkDistance).id(d => d.id))\n      .force(\"charge\", d3.forceManyBody())\n      .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n    const link = svg.append(\"g\")\n        .attr(\"stroke-opacity\", 0.6)\n      .selectAll(\"line\")\n      .data(links)\n      .join(\"line\")\n        .attr(\"stroke-width\", linkWidth)\n        .attr(\"stroke\", getLinkColor);\n\n    const nodeGroup = svg.append(\"g\")\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"stroke-width\", 1.5)\n      .selectAll(\"g\")\n      .data(nodes)\n      .join(\"g\");\n\n    const node = nodeGroup\n      .append(\"circle\")\n      .attr(\"r\", nodeRadius)\n      .attr(\"fill\", getNodeColor)\n      .call(onDrag(simulation))\n      .on('click', function(this, event, d) {\n        console.log('click', this, d)\n        selectedNodeId = d.id;\n        setSelectedNode(d.data);\n      });\n\n    const label = nodeGroup\n      .append('text')\n      .text(d => d.data && d.data.name ? d.data.name : d.id)\n      .attr('text-anchor', 'middle')\n      .attr('stroke-width', '1px');\n\n    node.append(\"title\")\n      .text(d => d.id);\n\n    simulation.on(\"tick\", () => {\n      link\n          .attr(\"x1\", d => d.source.x)\n          .attr(\"y1\", d => d.source.y)\n          .attr(\"x2\", d => d.target.x)\n          .attr(\"y2\", d => d.target.y)\n          .attr('stroke', getLinkColor);\n  \n      node\n          .attr(\"cx\", d => d.x)\n          .attr(\"cy\", d => d.y)\n          .attr(\"fill\", getNodeColor);\n      \n      label\n          .attr('x', d => d.x)\n          .attr('y', d => d.y)\n    });\n\n    return () => {\n      simulation.stop();\n      link.remove();\n      nodeGroup.remove();\n    };\n  })\n  \n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox={`0 0 ${width} ${height}`}\n      ref={svgRef}\n    ></svg>\n  );\n}\n\nfunction parseGraph(graph, root) : [ Node[], Link[] ] {\n  if (root === null) {\n    return [ [], [] ];\n  }\n  \n  let _nodes:Node[] = [{ id: root.id, data: {...root, name: 'You'} }],\n      _links:Link[] = [],\n      queue = [ root.id ],\n      visited = new Set();\n  \n  while (queue.length > 0) {\n    let pId = queue.shift();\n    console.log('parent:', pId);\n    if (pId === undefined || graph[pId] === undefined || visited.has(pId))\n      continue;\n    let children = graph[pId];\n    console.log('children:', children);\n    visited.add(pId);\n    for (let i = 0; i < children.length; i++) {\n      let c = children[i];\n      if (!visited.has(c.id)) {\n        _nodes.push({ id: c.id, data: { ...c } });\n        queue.push(c.id);\n      }\n      _links.push({ source: pId, target: c.id });\n    }\n    console.log('queue:', queue);\n  }\n\n  console.log('_nodes:', _nodes);\n  console.log('_links:', _links);\n  return [ _nodes, _links ];\n}\n\nfunction onDrag(sim) {\n  function dragstarted(event) {\n    if (!event.active) sim.alphaTarget(0.3).restart();\n    event.subject.fx = event.subject.x;\n    event.subject.fy = event.subject.y;\n  }\n  \n  function dragged(event) {\n    event.subject.fx = event.x;\n    event.subject.fy = event.y;\n  }\n  \n  function dragended(event) {\n    if (!event.active) sim.alphaTarget(0);\n    event.subject.fx = null;\n    event.subject.fy = null;\n  }\n  \n  return d3.drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n}\n\nNetworkGraph.defaultProps = {\n  // state\n  graph: {},\n  root: null,\n\n  // callback\n  setSelectedNode: () => {},\n\n  // styles\n  width: 500,\n  height: 500,\n  linkDistance: 300,\n  forceStrength: -20,\n  nodeRadius: 40,\n  linkWidth: 3,\n};\n","import React from 'react';\nimport './LandingDialog.scss';\n\nexport default function LandingDialog({\n  onLogin, onSignup, onNoAccount\n}) {\n  return (\n    <div className=\"text-left h5\">\n      <p>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary mr-3\"\n          onClick={onLogin}\n        >\n          Login\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-warning text-white\"\n          onClick={onSignup}\n        >\n            Signup\n        </button>\n      </p>\n      {/* <p>\n        <button type=\"button\" className=\"btn btn-link\" onClick={onNoAccount}>\n          continue without an account\n        </button>\n      </p> */}\n    </div>\n  )\n};\n\nLandingDialog.defaultProps = {\n  onLogin: () => {},\n  onSignup: () => {},\n  onNoAccount: () => {}\n};\n","import React, { useState } from 'react';\n\nexport default function SignupDialog({\n  onSubmit,onBack\n}) {\n  const [email, setEmail] = useField('');\n  const [password, setPassword] = useField('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSubmit(email, password);\n  }\n\n  function handleToggleShowPassword() {\n    setShowPassword(!showPassword);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* email field */}\n      <div className=\"row g-3 align-items-center mb-3\">\n        <div className=\"col-3\">\n          <label htmlFor=\"email\" className=\"col-form-label\">\n            Email\n          </label>\n        </div>\n        <div className=\"col-7\">\n          <input \n            id=\"emai\"\n            type=\"email\" \n            className=\"form-control\" \n            value={email} \n            onChange={setEmail}\n            required\n          />\n        </div>\n      </div>\n\n      {/* password field */}\n      <div className=\"row g-3 align-items-center mb-3\">\n        <div className=\"col-3\">\n          <label htmlFor=\"password\" className=\"col-form-label\">\n            Password\n          </label>\n        </div>\n        <div className=\"col-7\">\n          <input \n            id=\"password\"\n            type={showPassword ? 'text' : 'password'} \n            className=\"form-control\" \n            value={password} \n            onChange={setPassword}\n            required\n          />\n        </div>\n        <div className=\"col-2\">\n          <span onClick={handleToggleShowPassword}>Show</span>\n        </div>\n      </div>\n\n      <div className=\"row g-3 justify-content-end mb-3\">\n        <div className=\"col-auto\">\n          <button type=\"button\" className=\"btn btn-light btn-custom\" onClick={onBack}>\n            Back\n          </button>\n        </div>\n        <div className=\"col-auto\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Login\n          </button>\n        </div>\n      </div>\n    </form>\n  )\n};\n\nfunction useField(initial) {\n  let [state, setState] = useState(initial);\n  function setStateFromInput(e) {\n    setState(e.target.value);\n  }\n  return [state, setStateFromInput];\n}\n\nSignupDialog.defaultProps = {\n  onSubmit: _ => console.log(_),\n  onBack: _ => console.log(_),\n  errors: []\n};\n","import React, { useState } from 'react';\n\nexport default function SignupDialog({\n  onSubmit, onBack\n}) {\n  const [firstName, setFirstName] = useField('');\n  const [lastName, setLastName] = useField('');\n  const [email, setEmail] = useField('');\n  const [username, setUsername] = useField('');\n  const [password, setPassword] = useField('');\n  const [showPassword, setShowPassword] = useState(false);\n\nconsole.log('new state!', firstName, lastName, email, username, password, showPassword);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onSubmit({\n      firstName, lastName, email, username, password\n    });\n  }\n\n  function handleToggleShowPassword() {\n    setShowPassword(!showPassword);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* first name field */}\n      <div className=\"row g-3 align-items-center mb-3\">\n        <div className=\"col-4 col-md-3\">\n          <label htmlFor=\"firstname\" className=\"col-form-label\">\n            First Name\n          </label>\n        </div>\n        <div className=\"col-8 col-md-7\">\n          <input\n            id=\"firstname\"\n            type=\"text\"\n            className=\"form-control\"\n            value={firstName}\n            onChange={setFirstName}\n            required\n          />\n        </div>\n      </div>\n\n      {/* last name field */}\n      <div className=\"row g-3 align-items-center mb-3\">\n        <div className=\"col-4 col-md-3\">\n          <label htmlFor=\"lastname\" className=\"col-form-label\">\n            Last Name\n          </label>\n        </div>\n        <div className=\"col-8 col-md-7\">\n          <input\n            id=\"lastname\"\n            type=\"text\"\n            className=\"form-control\"\n            value={lastName}\n            onChange={setLastName}\n            required\n          />\n        </div>\n      </div>\n\n\n      {/* email field */}\n      <div className=\"row g-3 align-items-center mb-3\">\n        <div className=\"col-4 col-md-3\">\n          <label htmlFor=\"email\" className=\"col-form-label\">\n            Email\n          </label>\n        </div>\n        <div className=\"col-8 col-md-7\">\n          <input \n            id=\"emai\"\n            type=\"email\" \n            className=\"form-control\" \n            value={email} \n            onChange={setEmail}\n            required\n          />\n        </div>\n      </div>\n\n      {/* username field */}\n        <div className=\"row g-3 align-items-center mb-3\">\n        <div className=\"col-4 col-md-3\">\n          <label htmlFor=\"username\" className=\"col-form-label\">\n            Username\n          </label>\n        </div>\n        <div className=\"col-8 col-md-7\">\n          <input \n            id=\"username\"\n            type=\"text\" \n            className=\"form-control\" \n            value={username} \n            onChange={setUsername}\n            required\n          />\n        </div>\n      </div>\n\n      {/* password field */}\n      <div className=\"row g-3 align-items-center mb-3\">\n        <div className=\"col-4 col-md-3\">\n          <label htmlFor=\"password\" className=\"col-form-label\">\n            Password\n          </label>\n        </div>\n        <div className=\"col-6 col-md-7\">\n          <input \n            id=\"password\"\n            type={showPassword ? 'text' : 'password'} \n            className=\"form-control\" \n            value={password} \n            onChange={setPassword}\n            required\n          />\n        </div>\n        <div className=\"col-2\">\n          <span onClick={handleToggleShowPassword}>Show</span>\n        </div>\n        <span className=\"form-text\">\n          Must be 8-20 characters long.\n        </span>\n      </div>\n\n      <div className=\"row g-3 justify-content-end mb-3\">\n        <div className=\"col-auto\">\n          <button type=\"button\" className=\"btn btn-light mr-3\" onClick={onBack}>\n            Back\n          </button>\n          <button type=\"submit\" className=\"btn btn-warning text-white\">\n            Signup\n          </button>\n        </div>\n      </div>\n    </form>\n  )\n};\n\nfunction useField(initial) {\n  let [state, setState] = useState(initial);\n  function setStateFromInput(e) {\n    setState(e.target.value);\n  }\n  return [state, setStateFromInput];\n}\n\nSignupDialog.defaultProps = {\n  onSubmit: _ => { console.log(_) },\n  onBack: _ => { console.log(_) },\n};\n","import React, { useState } from 'react';\n\nexport default function AddNodeDialog({\n  onSubmit, onBack\n}) {\n  const [name, setName] = useField('');\n  const [username, setUsername] = useField('');\n  const [email, setEmail] = useField('');\n  const [knowUsername, setKnowUsername] = useState(true);\n\n  function handleSetKnowUserNameNo() {\n    setKnowUsername(false);\n  }\n\n  function handleSetKnowUserNameYes() {\n    setKnowUsername(true);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSubmit(name, username.length > 0 ? username : null);\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        {/* name field */}\n        <div className=\"row g-3 align-items-center mb-3\">\n          <div className=\"col-3 col-md-2\">\n            <label className=\"col-form-label\">Name<span className=\"red\">*</span></label>\n          </div>\n          <div className=\"col-9 col-md-8\">\n            <input type=\"text\" className=\"form-control\" value={name} onChange={setName} placeholder=\"name of person\"/>\n          </div>\n        </div>\n\n        {/* know username? field */}\n        <div className=\"row g-3 align-items-center mb-3\">\n          <div className=\"col-12 col-md-auto\">\n            <label className=\"col-form-label\">Do you know their username?</label>\n          </div>\n          <div className=\"col-3 col-md-auto\">\n            <input className=\"form-check-input mr-1\" type=\"radio\" onChange={handleSetKnowUserNameYes} checked={knowUsername}/>\n            <label>\n              Yes\n            </label>\n          </div>\n          <div className=\"col-3 col-md-auto\">\n            <input className=\"form-check-input mr-1\" type=\"radio\" onChange={handleSetKnowUserNameNo} checked={!knowUsername}/>\n            <label>\n              No\n            </label>\n          </div>\n        </div>\n\n        {/* user name field */}\n        { knowUsername && (\n          <div className=\"row g-3 align-items-center mb-3\">\n            <div className=\"col-3 col-md-2\">\n              <label className=\"col-form-label\">Username</label>\n            </div>\n            <div className=\"col-9 col-md-8\">\n              <input type=\"text\" className=\"form-control\" value={username} onChange={setUsername} placeholder=\"username of person\"/>\n            </div>\n            <span className=\"form-text\">\n              providing their username allows you to see their bubble, if you don't know you can always set it later\n            </span>\n          </div>\n        )}\n\n        { !knowUsername && (\n          <div className=\"row g-3 align-items-center mb-3\">\n            <div>Invite them by email (optional)?</div>\n            <div className=\"col-2\">\n              <label className=\"col-form-label\">Their email</label>\n            </div>\n            <div className=\"col-6\">\n              <input type=\"email\" className=\"form-control\" value={email} onChange={setEmail}/>\n            </div>\n            <div className=\"col-4\">\n              <button type=\"button\" className=\"btn btn-warning btn-signup\">\n                Invite\n              </button>\n            </div>\n          </div>\n        )}\n\n\n        <div className=\"row g-3 justify-content-end mt-3 mb-3\">\n          <div className=\"col-auto\">\n            <button type=\"button\" className=\"btn btn-light btn-custom\" onClick={onBack}>\n              Back\n            </button>\n          </div>\n          <div className=\"col-auto\">\n            <button type=\"submit\" className=\"btn btn-primary btn-signup\">\n              Add\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction useField(initial) {\n  let [state, setState] = useState(initial);\n  function setStateFromInput(e) {\n    setState(e.target.value);\n  }\n  return [state, setStateFromInput];\n}\n\nAddNodeDialog.defaultProps = {\n  onSubmit: () => {},\n  onBack: () => {}\n};\n","import React from 'react';\n\nexport default function DashboardDialog({\n  bubbleSize, onAddNode\n}) {\n  return (\n    <div className=\"text-left h6\">\n      <p>\n        There's currently&nbsp;\n        <span className=\"text-primary text-decoration-underline\">\n          {bubbleSize}\n        </span>\n        &nbsp;person in your bubble.\n      </p>\n      <p>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary mr-3\"\n          onClick={onAddNode}\n        >\n          Add more\n        </button>\n      </p>\n    </div>\n  )\n};\n\nDashboardDialog.defaultProps = {\n  bubbleSize: 1,\n  onAddNode: () => {}\n};\n","export async function checkStatus(res:Response) {\n  if (res.status >= 200 && res.status < 300) {\n    return res.json();\n  } else {\n    return res\n      .json()\n      .then((body) => {\n        console.log('res.body', body);\n        throw new Error(body.message);\n      });\n  }\n}\n\nexport const CORS_HEADER = {\n  'Origin': window.location.origin\n};\n\nexport const API_ADDR:string = process.env.NODE_ENV === 'production' &&  process.env.REACT_APP_API_ENDPOINT ?\n      process.env.REACT_APP_API_ENDPOINT : `${window.location.origin}/${process.env.NODE_ENV}`;\n","import { API_ADDR, checkStatus, CORS_HEADER } from './common';\n\ninterface SignupForm {\n  firstName: string;\n  lastName: string;\n  email: string;\n  username: string;\n  password: string;\n}\n\ninterface SignupResponse {\n  user: object;\n}\n\ninterface LoginResponse {\n  bubble: object;\n  user: object;\n}\n\nexport async function signup(form:SignupForm) : Promise<SignupResponse> {\n  console.log('CORS_HEADER', CORS_HEADER);\n\n  return fetch(`${API_ADDR}/user/signup`, {\n        method: 'POST',\n        headers: CORS_HEADER,\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(form),\n      })\n    .then(checkStatus);\n}\n\nexport async function login(email, password) : Promise<LoginResponse> {\n  let body = { email, password };\n  console.log('CORS_HEADER', CORS_HEADER);\n\n  return fetch(`${API_ADDR}/user/login`, {\n        method: 'POST',\n        headers: CORS_HEADER,\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(body),\n      })\n    .then(checkStatus);\n}","import { API_ADDR, checkStatus, CORS_HEADER } from './common';\n\ninterface AddNodeResponse {\n  bubble: object;\n}\n\nexport async function addNode(name:string, username:string) : Promise<AddNodeResponse> {\n  let node = { name };\n  if (username)\n    node['linkedUsername'] = username;\n\n  return fetch(`${API_ADDR}/user/connections`, {\n      method: 'POST',\n      headers: CORS_HEADER,\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify([ node ]),\n    })\n    .then(checkStatus);\n}","import React, { useState } from 'react';\nimport './DialogBox.scss';\nimport { LoginDialog, LandingDialog, SignupDialog, AddNodeDialog, DashboardDialog } from 'components/Dialogs';\nimport * as userAPI from 'api/user';\nimport * as nodeAPI from 'api/node';\nimport dialogText from 'data/dialog.json';\n\nenum Dialog {\n    Login = 'Login',\n    Landing = 'Landing',\n    Signup = 'Signup',\n    AddNode = 'AddNode',\n    Dashboard = 'Dashboard'\n  };\n\nexport default function DialogBox({\n  selectedNode,\n    bubbleSize, setBubble, setUser\n}) {\n  const [ dialog, setDialog ] = useState(Dialog.Landing);\n  const [ error, setError ] = useState(null);\n\n  async function handleSignup(form) {\n    console.log('handleSignup');\n    try {\n      let data = await userAPI.signup(form);\n      console.log(data);\n      setUser(data.user);\n      switchDialog(Dialog.Dashboard);\n    } catch (e) {\n      console.log(e);\n      setError(e.message);\n    }\n  }\n\n  async function handleLogin(email, password) {\n    console.log('handleLogin');\n    try {\n      let data = await userAPI.login(email, password);\n      setBubble(data.bubble);\n      setUser(data.user);\n      switchDialog(Dialog.Dashboard);\n    } catch (e) {\n      console.log(e);\n      setError(e.message);\n    }\n  }\n\n  async function handleAddNode(name, username) {\n    console.log('handleAddNode');\n    try {\n      let data = await nodeAPI.addNode(name, username);\n      setBubble(data.bubble);\n      switchDialog(Dialog.Dashboard);\n    } catch (e) {\n      console.log(e);\n      setError(e.message);\n    }\n  }\n\n  function handleEmailInvite(email) {\n    console.log('handleEmailInvite');\n    // submit network request\n    // always: show success message \"Invite has been successfully sent\"\n  }\n\n  function switchDialog(dlg: Dialog) {\n    setError(null);\n    setDialog(dlg);\n  }\n\n  let DialogToRender:JSX.Element;\n  switch (dialog) {\n    case Dialog.Login:\n      DialogToRender =\n        <LoginDialog\n          onSubmit={handleLogin}\n          onBack={() => switchDialog(Dialog.Landing)}\n        />;\n      break;\n    case Dialog.Signup:\n      DialogToRender =\n        <SignupDialog\n          onSubmit={handleSignup}\n          onBack={() => switchDialog(Dialog.Landing)}\n        />;\n      break;\n    case Dialog.AddNode:\n      DialogToRender =\n        <AddNodeDialog\n          onSubmit={handleAddNode}\n          onBack={() => switchDialog(Dialog.Dashboard)}\n        />;\n      break;\n    case Dialog.Dashboard:\n      DialogToRender =\n        <DashboardDialog\n          bubbleSize={bubbleSize}\n          onAddNode={() => switchDialog(Dialog.AddNode)}\n        />;\n      break;\n    default:\n      DialogToRender =\n        <LandingDialog\n          onLogin={() => switchDialog(Dialog.Login)}\n          onSignup={() => switchDialog(Dialog.Signup)}\n          onNoAccount={() => switchDialog(Dialog.Dashboard)}\n        />;\n  }\n\n  return (\n    <div className=\"box\">\n      <div className=\"dialog-heading\">\n        <div className=\"header\">{dialogText.headers[dialog]}</div>\n        <div className=\"subtitle\">{dialogText.subtitles[dialog]}</div>\n      </div>\n      <div className=\"content\">\n        { error &&\n            <div className=\"alert alert-warning\">\n              {error}\n            </div>\n        }\n        {DialogToRender}\n      </div>\n    </div>\n  );\n}\n\nDialogBox.defaultProps = {\n  selectedNode: null,\n  bubbleSize: 1,\n  setBubble: _ => {},\n  setUser: () => {}\n};\n","import DialogBox from './DialogBox';\n\nexport default DialogBox;","import React, { useState } from 'react';\n// import NetworkGraph from './components/NetworkGraph';\nimport NetworkGraph from './components/D3NetworkGraph';\nimport DialogBox from './containers/DialogBox';\nimport './App.scss';\n\nfunction App() {\n  const [ user, setUser ] = useState({\n    id: 0, email: 'demo@email.com', firstName: 'demo', lastName: 'demo', username: 'demo'\n  });\n  let a = getFakeNetwork()\n  const [ bubble, setBubble ] = useState({});\n  const [ selectedNode, setSelectedNode ] = useState({});\n\n  // const [ bubble, setBubble ] = useState({ [user.id]: { ...user } });\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"dialog-box\">\n        <DialogBox\n          selectedNode={selectedNode}\n          bubbleSize={Object.keys(bubble).length}\n          setBubble={setBubble}\n          setUser={setUser}\n        />\n      </div>\n      <div className=\"bubble-graph\">\n        {/* <NetworkGraph \n          height={window.outerHeight + 300}\n          width={window.outerWidth + 300}\n          root={user}\n          network={bubble}\n        /> */}\n        <NetworkGraph\n          width={window.outerWidth}\n          linkDistance={() => {\n            if (window.outerWidth >= 576)\n              return 300;\n            else\n              return 150;\n          }}\n          linkWidth={() => {\n            if (window.outerWidth >= 576)\n              return 2;\n            else\n              return 3;\n          }}\n          nodeRadius={() => {\n            if (window.outerWidth >= 576)\n              return 40;\n            else\n              return 30;\n          }}\n          height={window.outerHeight}\n          graph={bubble}\n          root={user}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction getFakeNetwork() {\n  const nodeCount = 20;\n  const graph = {};\n  for (let i = 0; i < nodeCount; i++) {\n    graph[i] = [];\n    let n = Math.floor(Math.random() * nodeCount/3);\n    for (let j = 0; j < n; j++) {\n      let target = Math.floor(Math.random() * nodeCount);\n      if (target !== i && !graph[i].includes(target))\n        graph[i].push({ id: target });\n    }\n  }\n  return graph;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}