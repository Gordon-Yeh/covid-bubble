# For full config options, check the docs:
#    docs.serverless.com

service: covid-bubble

# frameworkVersion: "=X.X.X"

provider:
  name: aws
  region: us-west-2
  runtime: nodejs10.x
  stage: ${opt:stage, 'development'}
  environment:
    STAGE: ${self:provider.stage}
    DB_PORT: ${file(./config.yml):${self:provider.stage}.dbPort}
    DB_HOST: ${file(./config.yml):${self:provider.stage}.dbHost}
    DB_USER: ${file(./config.yml):${self:provider.stage}.dbUser}
    DB_PWD: ${file(./config.yml):${self:provider.stage}.dbPwd}
    DB_NAME: ${file(./config.yml):${self:provider.stage}.dbName}
    SESSION_KEY: ${file(./config.yml):${self:provider.stage}.sessionKey}
    SESSION_EXPIRY: ${file(./config.yml):${self:provider.stage}.sessionExpiry}
  role: ${file(./config.yml):${self:provider.stage}.role}
  vpc: # Optional VPC. But if you use VPC then both subproperties (securityGroupIds and subnetIds) are required
    securityGroupIds: ${file(./config.yml):${self:provider.stage}.securityGroupIds}
    subnetIds: ${file(./config.yml):${self:provider.stage}.subnetIds}

functions:
  getTables:
    handler: src/handlers/getTables.handler
    events:
      - http:
          path: get-tables
          method: get
          cors: # will server preflight request appropriately
            origin: '*'
            allowCredentials: true
  signUp:
    handler: src/handlers/userSignup.handler
    events:
      - http:
          path: /user/signup
          method: post
          cors:
            origin: '*'
            allowCredentials: true

  login:
    handler: src/handlers/login.handler
    events:
      - http:
          path: /user/login
          method: post
          cors:
            origin: '*'
            allowCredentials: true

  addConnection:
    handler: src/handlers/addConnection.handler
    events:
      - http:
          path: /user/connections
          method: post
          cors:
            origin: '*'
            allowCredentials: true
  
  getConnections:
    handler: src/handlers/getConnections.handler
    events:
      - http:
          path: /user/connections
          method: get
          cors:
            origin: '*'
            allowCredentials: true

package:
  exclude:
    - .dev/**
    - db/**

plugins:
  - serverless-offline